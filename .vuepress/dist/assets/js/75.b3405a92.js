(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{659:function(e,t,a){"use strict";a.r(t);var o=a(0),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"getting-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getting-started"}},[e._v("#")]),e._v(" Getting Started")]),e._v(" "),a("p",[e._v("This tutorial will get you up and running with data access from KYVE in your React application.")]),e._v(" "),a("h2",{attrs:{id:"prereqs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prereqs"}},[e._v("#")]),e._v(" Prereqs")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("Get familiar with GraphQL")]),e._v(" "),a("p",[e._v("The Kyve Data Access API is available only in "),a("a",{attrs:{href:"https://graphql.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphQL"),a("OutboundLink")],1),e._v(". GraphQL is a query language for API's and an alternative to REST API's. If you are not familiar with GraphQL, you can read an introduction "),a("a",{attrs:{href:"https://graphql.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Select Your Endpoint")]),e._v(" "),a("p",[e._v("Select an endpoint from the list "),a("RouterLink",{attrs:{to:"/developers/accessing-data/well-known-endpoints.html"}},[e._v("here")]),e._v(", depending on what kind of data you would like to retrieve from Kyve.")],1)])]),e._v(" "),a("h2",{attrs:{id:"set-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-up"}},[e._v("#")]),e._v(" Set-up")]),e._v(" "),a("ol",[a("li",[e._v("Create a new React App with "),a("a",{attrs:{href:"https://create-react-app.dev/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Create React App"),a("OutboundLink")],1)]),e._v(" "),a("li",[a("code",[e._v("npm install @apollo/client graphql")])])]),e._v(" "),a("h2",{attrs:{id:"using-apollo-client-in-your-app"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-apollo-client-in-your-app"}},[e._v("#")]),e._v(" Using Apollo-Client in your App")]),e._v(" "),a("p",[e._v("Now that you have installed the required dependencies and set up a basic React app, you can get started by initializing your "),a("code",[e._v("ApolloClient")]),e._v(". "),a("code",[e._v("ApolloClient")]),e._v(" gives you an abstraction layer and an interface to the Graphql server.")]),e._v(" "),a("p",[e._v("Replace your "),a("code",[e._v("src/index.js")]),e._v(" with the following:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"js",base64:"aW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JzsKaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnOwppbXBvcnQgJy4vaW5kZXguY3NzJzsKCmltcG9ydCB7CiAgQXBvbGxvQ2xpZW50LAogIEluTWVtb3J5Q2FjaGUsCiAgQXBvbGxvUHJvdmlkZXIsCiAgdXNlUXVlcnksCiAgZ3FsLAp9IGZyb20gJ0BhcG9sbG8vY2xpZW50JzsKCmNvbnN0IGNsaWVudCA9IG5ldyBBcG9sbG9DbGllbnQoewogIHVyaTogJ2h0dHBzOi8vZXZtb3Mud2FycC5reXZlLm5ldHdvcmsvZ3JhcGhxbCcsCiAgY2FjaGU6IG5ldyBJbk1lbW9yeUNhY2hlKCksCn0pOwoKZnVuY3Rpb24gQXBwKCkgewogIHJldHVybiAoCiAgICAmbHQ7ZGl2Jmd0OwogICAgICAmbHQ7aDImZ3Q7TGF0ZXN0IEV2bW9zIFRyYW5zYWN0aW9ucyDwn5qAJmx0Oy9oMiZndDsKICAgICZsdDsvZGl2Jmd0OwogICk7Cn0KCmNvbnN0IHJvb3QgPSBSZWFjdERPTS5jcmVhdGVSb290KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdyb290JykpOwpyb290LnJlbmRlcigKICAmbHQ7UmVhY3QuU3RyaWN0TW9kZSZndDsKICAgICZsdDtBcG9sbG9Qcm92aWRlciBjbGllbnQ9e2NsaWVudH0mZ3Q7CiAgICAgICZsdDtBcHAgLyZndDsKICAgICZsdDsvQXBvbGxvUHJvdmlkZXImZ3Q7CiAgJmx0Oy9SZWFjdC5TdHJpY3RNb2RlJmd0OwopOwo="}}),e._v(" "),a("p",[e._v("In this section, you follow the basic setup for the Apollo Client. Notice how the client is connecting to the Evmos-EVM endpoint. You can find more endpoints "),a("RouterLink",{attrs:{to:"/developers/accessing-data/well-known-endpoints.html"}},[e._v("here")]),e._v(".")],1),e._v(" "),a("h2",{attrs:{id:"fetching-data-from-kyve"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fetching-data-from-kyve"}},[e._v("#")]),e._v(" Fetching data from KYVE")]),e._v(" "),a("p",[e._v("To fetch data from KYVE, you will need to specify a basic query that queries for Evmos-EVM-Transactions. The query below fetches the hash and blockNumber")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"js",base64:"Y29uc3QgRVZNT1NfRVZNX1RSQU5TQUNUSU9OUyA9IGdxbGAKICBxdWVyeSBUcmFuc2FjdGlvbnMgewogICAgZXZtb3NFdm1UcmFuc2FjdGlvbnMgewogICAgICBoYXNoCiAgICAgIGJsb2NrTnVtYmVyCiAgICB9CiAgfQpgOwo="}}),e._v(" "),a("p",[e._v("If you go to the appropriate EVM endpoint here, you should see a GraphiQL GraphQL playground. You can copy and paste the query above and hit the run button to see results.")]),e._v(" "),a("p",[a("img",{attrs:{src:"/graphql-kyve-1.gif",alt:"graphql"}})]),e._v(" "),a("p",[e._v("As you can see, the GraphQL query returns the "),a("code",[e._v("hash")]),e._v(" and "),a("code",[e._v("blockNumber")]),e._v(" for each block.")]),e._v(" "),a("p",[e._v("Next up, you are building a component that uses Apollo's "),a("code",[e._v("useQuery")]),e._v("-Hook. For this example,\nyou will render the hashes and the block number of a transaction into a list.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"js",base64:"ZnVuY3Rpb24gRXZtb3NUcmFuc2FjdGlvbnMoKSB7CiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlUXVlcnkoRVZNT1NfRVZNX1RSQU5TQUNUSU9OUyk7CgogIGlmIChsb2FkaW5nKSByZXR1cm4gJmx0O3AmZ3Q7TG9hZGluZy4uLiZsdDsvcCZndDs7CiAgaWYgKGVycm9yKSByZXR1cm4gJmx0O3AmZ3Q7RXJyb3IgOigmbHQ7L3AmZ3Q7OwoKICByZXR1cm4gZGF0YS5ldm1vc0V2bVRyYW5zYWN0aW9ucy5tYXAoKHsgaGFzaCwgYmxvY2tOdW1iZXIgfSkgPSZndDsgKAogICAgJmx0O2RpdiBrZXk9e2hhc2h9Jmd0OwogICAgICAmbHQ7cCZndDsKICAgICAgICB7aGFzaH0gOiB7YmxvY2tOdW1iZXJ9CiAgICAgICZsdDsvcCZndDsKICAgICZsdDsvZGl2Jmd0OwogICkpOwp9Cg=="}}),e._v(" "),a("p",[e._v("At last you are registering the above component into your app")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"js",base64:"ZnVuY3Rpb24gQXBwKCkgewogIHJldHVybiAoCiAgICAmbHQ7ZGl2Jmd0OwogICAgICAmbHQ7aDImZ3Q7TGF0ZXN0IEV2bW9zIFRyYW5zYWN0aW9ucyDwn5qAJmx0Oy9oMiZndDsKICAgICAgJmx0O0V2bW9zVHJhbnNhY3Rpb25zIC8mZ3Q7CiAgICAmbHQ7L2RpdiZndDsKICApOwp9Cg=="}}),e._v(" "),a("p",[e._v("You can now run "),a("code",[e._v("npm start")]),e._v(" to see the app in action.")]),e._v(" "),a("h2",{attrs:{id:"next-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#next-steps"}},[e._v("#")]),e._v(" Next steps")]),e._v(" "),a("p",[e._v("Now that you've successfully accessed data from Kyve, you can further explore the GraphQL syntax to construct potentially more complicated queries.")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"basic-queries"}},[e._v("Basic queries")])]),e._v(" "),a("li",[a("a",{attrs:{href:"querying-multiple-sources"}},[e._v("Querying multiple sources")])]),e._v(" "),a("li",[a("a",{attrs:{href:"paginating-a-query"}},[e._v("Paginating a query")])])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);