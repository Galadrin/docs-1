(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{646:function(t,e,a){"use strict";a.r(e);var r=a(0),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"filtering-a-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filtering-a-query"}},[t._v("#")]),t._v(" Filtering a Query")]),t._v(" "),a("p",[t._v("To create more complex queries, you can make use of Filters. A Filter consists of 4 parts:")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("Field")]),t._v(": The field name you want to filter on. You can use any string. If you are going to filter on a sub-field, use a double underscore to select it.")]),t._v(" "),a("li",[a("strong",[t._v("Value")]),t._v(": A value to filter for. You can use any type for a given field name.")]),t._v(" "),a("li",[a("strong",[t._v("Operator")]),t._v(" (optional): Operators allow you to add more selection to your filter.")]),t._v(" "),a("li",[a("strong",[t._v("Combinator")]),t._v(" (optional): You can combine multiple filters with a combinator.")])]),t._v(" "),a("h2",{attrs:{id:"operators"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),a("p",[t._v("An operator allows the user to apply a specific operation to filter. Allowed values are:")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Operation")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("ALL")]),t._v(" "),a("td",[t._v("Every item in the list of values provided is in an array")])]),t._v(" "),a("tr",[a("td",[t._v("CONTAINS")]),t._v(" "),a("td",[t._v("String field contains value")])]),t._v(" "),a("tr",[a("td",[t._v("ENDS_WITH")]),t._v(" "),a("td",[t._v("String field ends with value")])]),t._v(" "),a("tr",[a("td",[t._v("EXISTS")]),t._v(" "),a("td",[t._v("Value for field exists")])]),t._v(" "),a("tr",[a("td",[t._v("GT")]),t._v(" "),a("td",[t._v("Greater than")])]),t._v(" "),a("tr",[a("td",[t._v("GTE")]),t._v(" "),a("td",[t._v("Greater than or equal to")])]),t._v(" "),a("tr",[a("td",[t._v("IN")]),t._v(" "),a("td",[t._v("Value is in the list (a list of values should be provided)")])]),t._v(" "),a("tr",[a("td",[t._v("LT")]),t._v(" "),a("td",[t._v("Less than")])]),t._v(" "),a("tr",[a("td",[t._v("LTE")]),t._v(" "),a("td",[t._v("Less than or equal to")])]),t._v(" "),a("tr",[a("td",[t._v("NE")]),t._v(" "),a("td",[t._v("Not equal to")])]),t._v(" "),a("tr",[a("td",[t._v("NIN")]),t._v(" "),a("td",[t._v("Value is not in the list (a list of values should be provided)")])]),t._v(" "),a("tr",[a("td",[t._v("REGEX")]),t._v(" "),a("td",[t._v("String field match by regex")])]),t._v(" "),a("tr",[a("td",[t._v("SIZE")]),t._v(" "),a("td",[t._v("The size of the array is")])]),t._v(" "),a("tr",[a("td",[t._v("STARTS_WITH")]),t._v(" "),a("td",[t._v("String field starts with value")])])])]),t._v(" "),a("h2",{attrs:{id:"combinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#combinator"}},[t._v("#")]),t._v(" Combinator")]),t._v(" "),a("p",[t._v("Possible values are AND and OR. A combinator always combines the previous filter with the current one.")]),t._v(" "),a("h4",{attrs:{id:"example"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example:")]),t._v(" "),a("p",[a("em",[t._v("Select all objects where the field 'hash' starts with “0xa” and the field 'number' is less than 1000")])]),t._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"ZmlsdGVyOiBbCiAgICB7IGZpZWxkOiAmcXVvdDtoYXNoJnF1b3Q7LCBvcGVyYXRvcjogU1RBUlRTX1dJVEgsIHZhbHVlOiAmcXVvdDsweGEmcXVvdDsgfQogICAgeyBmaWVsZDogJnF1b3Q7bnVtYmVyJnF1b3Q7LCBvcGVyYXRvcjogTFQsIHZhbHVlOiAxMDAwLCBjb21iaW5hdG9yOiBBTkQgfQpdCg=="}})],1)}),[],!1,null,null,null);e.default=o.exports}}]);
